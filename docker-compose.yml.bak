services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: membres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d membres"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build: ./backend
    command: gunicorn -b 0.0.0.0:8000 wsgi:app --workers 3
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  db_data:
